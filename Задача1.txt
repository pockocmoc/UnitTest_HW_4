Задание 1. Ответьте письменно на вопросы:

1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

Ответы:

1) Использование тестовых заглушек может быть полезным при написании модульных тестов,
так как они позволяют изолировать код от зависимостей и создать предсказуемую среду для тестирования.
Заглушки могут заменить реальные объекты или компоненты,
которые могут быть сложными в настройке или медленными в выполнении,
и предоставить контролируемые результаты для проверки поведения кода.

2) Для проверки, что метод был вызван с определенными аргументами,
следует использовать заглушку типа "мок" (mock).
Моки позволяют создавать заменитель реального объекта с заданным поведением и проверять,
был ли метод вызван с определенными аргументами.

3) Если нужно просто вернуть определенное значение или исключение в ответ на вызов метода,
следует использовать заглушку типа "заглушка" (stub).
Заглушки предоставляют заранее определенные значения или исключения для методов,
чтобы избежать выполнения реальной логики и получить предсказуемый результат.

4) Для имитации взаимодействия с внешним API или базой данных следует использовать заглушку типа "фальшивка" (fake)
или "дублер" (dummy). Фальшивки и дублеры предоставляют простую реализацию внешних зависимостей,
которая может использоваться вместо реальных сервисов для тестирования.
Они могут имитировать поведение реального API или базы данных, но без реального взаимодействия с ними.